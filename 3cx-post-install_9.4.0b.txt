#!/bin/bash
post=/usr/local/bin/post-install

echo "deb http://deb.debian.org/debian stretch main contrib non-free" > /etc/apt/sources.list
echo "deb http://security.debian.org/ stretch/updates main contrib non-free" >> /etc/apt/sources.list
echo "deb http://deb.debian.org/debian stretch-updates main contrib non-free" >> /etc/apt/sources.list
wget -O- http://downloads-global.3cx.com/downloads/3cxpbx/public.key | apt-key add -

mkdir /etc/3cxpbx
echo $THREECXMARKER > /etc/3cxpbx/3cxmarkers
mkdir /etc/iptables
cat > /etc/iptables/rules.v4<<EOF
*filter
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [0:0]
-A INPUT -i lo -j ACCEPT
-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A INPUT -m conntrack --ctstate INVALID -j DROP
-4 -A INPUT -s 127.0.0.0/8 ! -i lo -j DROP
-6 -A INPUT -s ::1/128 ! -i lo -j DROP
-4 -A INPUT -d 224.0.1.75 -j ACCEPT
-4 -A INPUT -m addrtype --dst-type BROADCAST -j DROP
-4 -A INPUT -m addrtype --dst-type MULTICAST -j DROP
-4 -A INPUT -m addrtype --dst-type ANYCAST -j DROP
-4 -A INPUT -d 224.0.0.0/4 -j DROP
-N SSHBRUTE
-A SSHBRUTE -m recent --name SSH --set
-A SSHBRUTE -m recent --name SSH --update --seconds 300 --hitcount 10 -m limit --limit 1/second --limit-burst 100 -j LOG --log-prefix "iptables[SSH-brute]: "
-A SSHBRUTE -m recent --name SSH --update --seconds 300 --hitcount 10 -j DROP
-A SSHBRUTE -j ACCEPT
-N ICMPFLOOD
-A ICMPFLOOD -m recent --set --name ICMP --rsource
-A ICMPFLOOD -m recent --update --seconds 1 --hitcount 6 --name ICMP --rsource --rttl -m limit --limit 1/sec --limit-burst 1 -j LOG --log-prefix "iptables[ICMP-flood]: "
-A ICMPFLOOD -m recent --update --seconds 1 --hitcount 6 --name ICMP --rsource --rttl -j DROP
-A ICMPFLOOD -j ACCEPT
-A INPUT -p tcp -m multiport --dports 80,443,5000,5001,5015,5060,5061,5090 --syn -m conntrack --ctstate NEW -j ACCEPT
-A INPUT -p udp -m multiport --dports 69,5060,5090,7000:10999 -j ACCEPT
-A INPUT -p udp -m multiport --dports 137,138 -j ACCEPT
-A INPUT -p tcp -m multiport --dports 139,445 -j ACCEPT
-A INPUT -p tcp --dport 22 --syn -m conntrack --ctstate NEW -j SSHBRUTE
-4 -A INPUT -p icmp --icmp-type 0  -m conntrack --ctstate NEW -j ACCEPT
-4 -A INPUT -p icmp --icmp-type 3  -m conntrack --ctstate NEW -j ACCEPT
-4 -A INPUT -p icmp --icmp-type 11 -m conntrack --ctstate NEW -j ACCEPT
-6 -A INPUT              -p ipv6-icmp --icmpv6-type 1   -j ACCEPT
-6 -A INPUT              -p ipv6-icmp --icmpv6-type 2   -j ACCEPT
-6 -A INPUT              -p ipv6-icmp --icmpv6-type 3   -j ACCEPT
-6 -A INPUT              -p ipv6-icmp --icmpv6-type 4   -j ACCEPT
-6 -A INPUT              -p ipv6-icmp --icmpv6-type 133 -j ACCEPT
-6 -A INPUT              -p ipv6-icmp --icmpv6-type 134 -j ACCEPT
-6 -A INPUT              -p ipv6-icmp --icmpv6-type 135 -j ACCEPT
-6 -A INPUT              -p ipv6-icmp --icmpv6-type 136 -j ACCEPT
-6 -A INPUT              -p ipv6-icmp --icmpv6-type 137 -j ACCEPT
-6 -A INPUT              -p ipv6-icmp --icmpv6-type 141 -j ACCEPT
-6 -A INPUT              -p ipv6-icmp --icmpv6-type 142 -j ACCEPT
-6 -A INPUT -s fe80::/10 -p ipv6-icmp --icmpv6-type 130 -j ACCEPT
-6 -A INPUT -s fe80::/10 -p ipv6-icmp --icmpv6-type 131 -j ACCEPT
-6 -A INPUT -s fe80::/10 -p ipv6-icmp --icmpv6-type 132 -j ACCEPT
-6 -A INPUT -s fe80::/10 -p ipv6-icmp --icmpv6-type 143 -j ACCEPT
-6 -A INPUT              -p ipv6-icmp --icmpv6-type 148 -j ACCEPT
-6 -A INPUT              -p ipv6-icmp --icmpv6-type 149 -j ACCEPT
-6 -A INPUT -s fe80::/10 -p ipv6-icmp --icmpv6-type 151 -j ACCEPT
-6 -A INPUT -s fe80::/10 -p ipv6-icmp --icmpv6-type 152 -j ACCEPT
-6 -A INPUT -s fe80::/10 -p ipv6-icmp --icmpv6-type 153 -j ACCEPT
-4 -A INPUT -p icmp --icmp-type 8  -m conntrack --ctstate NEW -j ICMPFLOOD
-6 -A INPUT -p ipv6-icmp --icmpv6-type 128 -j ICMPFLOOD
-A INPUT -p udp -m multiport --dports 135,445 -j DROP
-A INPUT -p udp --dport 137:139 -j DROP
-A INPUT -p udp --sport 137 --dport 1024:65535 -j DROP
-A INPUT -p tcp -m multiport --dports 135,139,445 -j DROP
-A INPUT -p udp --dport 1900 -j DROP
-A INPUT -p udp --sport 53 -j DROP
-A INPUT -p tcp --dport 113 --syn -m conntrack --ctstate NEW -j REJECT --reject-with tcp-reset
-A INPUT -m limit --limit 1/second --limit-burst 100 -j LOG --log-prefix "iptables[DOS]: "
COMMIT
EOF
cp /etc/iptables/rules.v4 /etc/iptables/rules.v6
cat > $post  <<'EOG'
#!/bin/bash
clear
echo "deb http://downloads-global.3cx.com/downloads/debian stretch main" > /etc/apt/sources.list.d/3cxpbx.list;
echo "deb http://downloads-global.3cx.com/downloads/debian stretch-testing main" > /etc/apt/sources.list.d/3cxpbx-testing.list;

clear
echo "10" | whiptail --title " 3CX Installation " --gauge "Waiting for network" 7 78 0; sleep 1
WAITING=0
while ! wget http://downloads-global.3cx.com/ --spider --tries 1 --timeout 10 --dns-timeout 10 --connect-timeout 10 --read-timeout 10 -O - 1>/dev/null 2>/dev/null; do
    sleep 1
    WAITING=$((${WAITING} + 1))
    if [ $WAITING -gt 10 ]; then
      whiptail --title " 3CX Installation " --msgbox "Could not connect to 3CX server. Please check your internet connection and try again." 8 78
    fi;
done
echo "20" | whiptail --title " 3CX Installation " --gauge "Update package lists" 7 78 0; sleep 1
apt-get update >> /tmp/installation_log.txt 2>&1
echo "30" | whiptail --title " 3CX Installation " --gauge "Install new certificates" 7 78 0; sleep 1
/usr/bin/debconf-apt-progress -- apt-get -y install ca-certificates libcurl3=7.38.0-4+deb8u5 mc htop openssh-server net-tools
/usr/bin/debconf-apt-progress -- apt-get install -y iptables-persistent
apt-get update >> /tmp/installation_log.txt 2>&1
echo "50" | whiptail --title " 3CX Installation " --gauge "Install latest linux kernel" 7 78 0; sleep 1
/usr/bin/debconf-apt-progress -- apt-get -y install linux-image-amd64
echo "60" | whiptail --title " 3CX Installation " --gauge "Install 3CX package" 7 78 0; sleep 1

ask_for_channel()
{
echo "3CX Stable" > /tmp/results
}
ask_for_channel

CHANNEL_RESULT=`cat /tmp/results`

case "${CHANNEL_RESULT}" in
"3CX Stable") echo "40" | whiptail --title " 3CX Installation " --gauge "Prepare iptables" 7 78 0; sleep 1
iptables-restore < /etc/iptables/rules.v4  >> /tmp/installation_log.txt 2>&1
systemctl enable netfilter-persistent.service >> /tmp/installation_log.txt 2>&1
echo "1" | /usr/bin/debconf-apt-progress -- apt-get -y install 3cxpbx
/bin/ln -s /etc/systemd/system/3CXFirstInstallation.service /etc/systemd/system/multi-user.target.wants/3CXFirstInstallation.service
;;
"3CX Beta") echo "40" | whiptail --title " 3CX Installation " --gauge "Prepare iptables" 7 78 0; sleep 1
iptables-restore < /etc/iptables/rules.v4  >> /tmp/installation_log.txt 2>&1
systemctl enable netfilter-persistent.service >> /tmp/installation_log.txt 2>&1
echo "1" | /usr/bin/debconf-apt-progress -- apt-get -y -t testing install 3cxpbx
/bin/ln -s /etc/systemd/system/3CXFirstInstallation.service /etc/systemd/system/multi-user.target.wants/3CXFirstInstallation.service
;;
"3CX SBC") rm -f /etc/iptables/rules.v4 2> /dev/null > /dev/null
rm -f /etc/iptables/rules.v6 2> /dev/null > /dev/null
echo "1" | /usr/bin/debconf-apt-progress -- apt-get -y -t testing install curl
echo "1" | /usr/bin/debconf-apt-progress -- apt-get -y -t testing install 3cxsbc
/bin/systemctl stop 3cxsbc
/usr/bin/3CXSBCInstallation.sh
;;
*)
  echo "1" | /usr/bin/debconf-apt-progress -- apt-get -y install 3cxpbx
;;
esac

echo "80" | whiptail --title " 3CX Installation " --gauge "Activate root login" 7 78 0; sleep 1
sed -i 's/#PermitRootLogin.*/PermitRootLogin yes/g' /etc/ssh/sshd_config >> /tmp/installation_log.txt 2>&1
service ssh restart >> /tmp/installation_log.txt 2>&1
echo "100" | whiptail --title " 3CX Installation " --gauge "Prepare for reboot" 7 78 0; sleep 1
rm /usr/local/bin/post-install >> /tmp/installation_log.txt 2>&1
/sbin/reboot >> /tmp/installation_log.txt 2>&1
EOG

cat > /usr/bin/3CXSBCInstallation.sh<<'EOL'
#!/bin/bash
FQDN=$(whiptail --title "3CX SBC" --inputbox  "Enter your 3CX Phone System FQDN
TIP: Get FQDN from
3CX Management console > Settings > Network > FQDN Tab" --backtitle "3CX Session Border Controller Setup" 12 62  3>&1 1>&2 2>&3)
exitstatus=$?
if [ $exitstatus = 1 ]; then
	exit 1
    echo "EXIT"
fi
FQDNnat=$FQDN
FQDN="TunnelAddr =$FQDN"
sed -i "s/TunnelAddr =/$FQDN/g" /etc/3cxsbc.conf

Localip=$(whiptail --title "3CX SBC" --inputbox "Enter the IP Address of your 3CXPhone System server

TIP: If 3CX is behind NAT, enter the local IP of 3CX PBX
     If 3CX is NOT behind NAT,enter the public IP" --backtitle "3CX Session Border Controller Setup" 12 62  3>&1 1>&2 2>&3)
	 exitstatus=$?
if [ $exitstatus = 1 ]; then
	exit 1
    echo "EXIT"
fi

Pbxport=$(whiptail --title "3CX SBC" --inputbox "Enter 3CX Phone System SIP Port and press ex.5060
TIP:Get SIP Port from
    3CX Management console > Settings > Network >
    Ports > SIP Port" --backtitle "3CX Session Border Controller Setup" 12 62 5060  3>&1 1>&2 2>&3)
exitstatus=$?
if [ $exitstatus = 1 ]; then
	exit 1
    echo "EXIT"
fi
	Pbxport="PbxSipPort =$Pbxport"
sed -i "s/PbxSipPort = 5060/$Pbxport/g" /etc/3cxsbc.conf

Tunnelport=$(whiptail --title "3CX SBC" --inputbox "Enter 3CX Tunnel Port ex.5090
TIP:Get 3CX Tunnel port from
    3CX Management console > Settings > Network >
    Ports > Tunnel Port" --backtitle "3CX Session Border Controller Setup" 12 62 5090  3>&1 1>&2 2>&3)
	exitstatus=$?
if [ $exitstatus = 1 ]; then
	exit 1
    echo "EXIT"
fi
TunnelPortf=$Tunnelport
Tunnelport="TunnelPort = $Tunnelport"
sed -i "s/TunnelPort = 5090/$Tunnelport/g" /etc/3cxsbc.conf

Tunnelpass=$(whiptail --title "3CX SBC" --inputbox "Enter Tunnel Password

TIP:Get 3CX Tunnel Password from
   3CX Management console > Settings > Security >
   3CX Tunnel tab > Tunnel Password" --backtitle "3CX Session Border Controller Setup" 12 62  3>&1 1>&2 2>&3)
   exitstatus=$?
if [ $exitstatus = 1 ]; then
	exit 1
    echo "EXIT"
fi
sed -i 's/entertunnelpass/'$Tunnelpass'/g' /etc/3cxsbc.conf

fchoice=$(whiptail --title "3CX SBC" --menu --nocancel "
    Do you want to configure Failover?
    If main Server go down 3CXSBC can automatically
	connect to a secondary standby 3CX Server" --backtitle "3CX Session Border Controller Setup" 13 62 2 \
        1 "Enable Failover" \
		2 "No Failover" 3>&2 2>&1 1>&3)
if [ $fchoice -eq 1 ]
then
Tunnelf=$(whiptail --title "3CX SBC" --inputbox "Enter the Public IP Address of your 3CXPhone System Failover server

TIP:Use the Public IP of the Failover Server
    and NOT the FQDN" --backtitle "3CX Session Border Controller Setup" 12 62  3>&1 1>&2 2>&3)
exitstatus=$?
if [ $exitstatus = 1 ]; then
	exit 1
    echo "EXIT"
fi
Tunnelf="TunnelAddr2 = $Tunnelf"
sed -i "s/#TunnelAddr2 =/$Tunnelf/g" /etc/3cxsbc.conf

TunnelPortf="TunnelPort2 = $TunnelPortf"
sed -i "s/#TunnelPort2 =/$TunnelPortf/g" /etc/3cxsbc.conf
Localip=$FQDNnat
fchoice=TRUE
fi

if [ $fchoice = 2 ]; then
	fchoice=FALSE
fi
Localipnat=$Localip
Localip="PbxSipIP =$Localip"
sed -i "s/PbxSipIP =/$Localip/g" /etc/3cxsbc.conf

schoice=$(whiptail --title "3CX SBC" --menu --nocancel "
                 Secures tunnel traffic
                 Note:Requires V15" --backtitle "3CX Session Border Controller Setup" 12 62 2 \
        1 "Enable Encryption" \
        2 "Disable Encryption" 3>&2 2>&1 1>&3)
if [ $schoice -eq 1 ]
then
schoice=1
else
schoice=0
sed -i "s/SecurityMode = 1/SecurityMode = 0/g" /etc/3cxsbc.conf
fi

versbc="$(dpkg -s 3cxsbc | grep 'Version')"
versbc=${versbc:8}
natali="True"
methprov="MANUALLY"
if [ "$Localipnat" = "$FQDNnat" ]
then
natali="True"
else
natali="False"
fi
curl --data "VersionNT=$lsb&ProductVersion=$versbc&NAT_MODE=$natali&UserLanguageID=2057&METHODCONFIG=$methprov&CHECKBOX_SECURITY=$schoice&FAILOVER=$fchoice" https://www.3cx.com/collect_db_3cxsbc.php
red=`tput setaf 1`
green=`tput setaf 2`
echo "${red}    Restarting 3cxsbc Service$(tput sgr 0)"
systemctl start 3cxsbc

whiptail --title "3CX SBC" --msgbox "3CXSBC is up and running. You can now restart your IP Phones and access the 3CX Management Console > Phones
to provision your IP Phones." --backtitle "3CX Session Border Controller Setup" 12 62
echo "${green}    INFO: To access the 3CXSBC configuration file type the following command sudo nano /etc/3cxsbc.conf $(tput sgr 0)"
echo "${green}    INFO: To enable logs go to nano /etc/3cxsbc.conf and set [Log] level to DEBUG $(tput sgr 0)"
echo "${green}    INFO: To open log file type this command tail -f /var/log/3cxsbc.log $(tput sgr 0)"
echo "${green}    3CXSBC is up and running. You can now restart your IP Phones and access the 3CX Management Console > Phones node to provision your IP Phones.  $(tput sgr 0)"
rm 3cxsbc.*

EOL
chmod +x /usr/bin/3CXSBCInstallation.sh

cat > /usr/bin/3CXStartWizard.sh<<'EOH'
#!/bin/bash
/bin/chvt 2

/bin/cat /var/lib/3cxpbx/Data/Logs/PbxWebConfigTool.log 2> /dev/null | /bin/grep -a "Installation result = Success" > /dev/null 2> /dev/null
SUCCESS_PBXWEBCONFIG=$?

if [ $SUCCESS_PBXWEBCONFIG -eq 0 ]; then
  exit 0;
fi

/bin/cat /var/lib/3cxpbx/Data/Logs/PbxConfigTool.log 2> /dev/null | /bin/grep -a "Installation result = Success" > /dev/null 2> /dev/null
SUCCESS_PBXCONFIG=$?

if [ $SUCCESS_PBXCONFIG -eq 0 ]; then
  exit 0;
fi

/usr/bin/sudo /usr/sbin/3CXWizard --cleanup
sleep 3600

EOH
chmod +x /usr/bin/3CXStartWizard.sh

cat > /etc/systemd/system/3CXFirstInstallation.service<<EOI
[Unit]
Description=Starts 3CX Wizard after first installation
ConditionPathExists=/usr/sbin/3CXWizard
ConditionPathExists=!/var/lib/3cxpbx/Bin/startup
ConditionPathExists=!/var/lib/3cxpbx/Instance1/Bin/config.json
ConditionPathExists=!/var/lib/3cxpbx/Bin/nginx/conf/Instance1/
Conflicts=getty@tty2.service
AllowIsolate=yes

[Service]
Type=simple
RemainAfterExit=true
ExecStart=/usr/bin/3CXStartWizard.sh
User=root
Group=root
StandardInput=tty
TTYPath=/dev/tty2
TTYReset=yes
TTYVHangup=yes

[Install]
WantedBy=multi-user.target

EOI
apt-get update
apt-get upgrade
apt-get install net-tools
apt-get -y install nginx
rm -f /etc/nginx/sites-enabled/default
systemctl reload nginx
apt-get -y install 3cxpbx
chmod a+x $post
echo "#!/bin/sh" > /etc/rc.local
echo "clear; sleep 1" >> /etc/rc.local
echo "if [ -x "$post" ]; then /bin/openvt -c 10 -s $post; fi" >> /etc/rc.local
echo "exit 0" >> /etc/rc.local
chmod +x /etc/rc.local
mkdir -p /etc/3cxpbx/
